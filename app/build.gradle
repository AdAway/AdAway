plugins {
    id 'com.android.application'
}

boolean keyStoreDefined = project.hasProperty('signingStoreLocation') &&
        project.hasProperty('signingStorePassword') &&
        project.hasProperty('signingKeyAlias') &&
        project.hasProperty('signingKeyPassword')

repositories {
    maven {
        url 'https://jitpack.io'
    }
}

android {
    compileSdkVersion 33
    buildToolsVersion '33.0.2'
    namespace 'org.adaway'

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 33
        versionCode 60100   // Read x.yy.zz to match version name
        versionName '6.1.0'

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation": "$projectDir/schemas".toString(),
                        "room.incremental"   : "true"
                ]
            }
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    /*
     * To sign release build, create file gradle.properties in ~/.gradle/ with this content:
     *
     * signingStoreLocation=/home/key.store
     * signingStorePassword=xxx
     * signingKeyAlias=alias
     * signingKeyPassword=xxx
     */
    if (keyStoreDefined) {
        println "Found signature properties in gradle.properties. Build will be signed."

        signingConfigs {
            release {
                storeFile file(signingStoreLocation)
                storePassword signingStorePassword
                keyAlias signingKeyAlias
                keyPassword signingKeyPassword
            }
        }

        buildTypes.debug.signingConfig = signingConfigs.release
        buildTypes.release.signingConfig = signingConfigs.release
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildFeatures {
        viewBinding true
    }

    packagingOptions {
        jniLibs {
            useLegacyPackaging = true
        }
    }

    buildTypes {
//        debug {
//            shrinkResources false
//            minifyEnabled false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Do not abort build if lint finds errors
    lint {
        disable 'MissingTranslation'
    }
}

dependencies {
    // Native modules
    implementation project(':tcpdump')
    implementation project(':webserver')

    // AndroidX components
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.fragment:fragment:1.5.6'
    // "fragment-ktx" is not used but was added to fix the following dependency error:
    // Duplicate class androidx.lifecycle.ViewModelLazy found in modules lifecycle-viewmodel-2.5.0-runtime (androidx.lifecycle:lifecycle-viewmodel:2.5.0) and lifecycle-viewmodel-ktx-2.3.1-runtime
    implementation 'androidx.fragment:fragment-ktx:1.5.6'
    implementation 'androidx.paging:paging-runtime:3.1.1'
    implementation 'androidx.preference:preference:1.2.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.0'
    implementation 'androidx.room:room-runtime:2.5.1'
    implementation 'androidx.room:room-paging:2.5.1'
    annotationProcessor 'androidx.room:room-compiler:2.5.1'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation 'androidx.work:work-runtime:2.8.1'
    implementation 'com.google.android.material:material:1.8.0'

    // Collections related
    implementation 'com.google.guava:guava:31.1-android'
    // Network related
    implementation 'com.squareup.okhttp3:okhttp:4.10.0'
    // Logging related
    implementation 'com.jakewharton.timber:timber:5.0.1'
    if (keyStoreDefined) {
        implementation project(':sentrystub')
    } else {
        implementation 'io.sentry:sentry-android:3.1.3'
    }

    // Root related
    implementation 'com.github.topjohnwu.libsu:core:5.0.5'

    // VPN related
    implementation 'org.pcap4j:pcap4j-core:1.8.2'
    implementation 'org.pcap4j:pcap4j-packetfactory-static:1.8.2'
    implementation 'dnsjava:dnsjava:3.5.2'
    implementation 'org.slf4j:slf4j-android:1.7.36'
    implementation 'com.squareup.okhttp3:okhttp-dnsoverhttps:4.10.0'

    // Test related
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.json:json:20220320'
    androidTestImplementation 'androidx.arch.core:core-testing:2.2.0'
    androidTestImplementation 'androidx.test:core:1.5.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test:runner:1.5.2'
    androidTestImplementation 'junit:junit:4.13.2'
}
