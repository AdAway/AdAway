apply plugin: 'com.android.library'

android {
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
    }

    externalNativeBuild {
        ndkBuild {
            path 'jni/Android.mk'
        }
    }

    compileOptions {
        encoding = 'UTF-8'
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
}

/**
 * Task to rename executables from hello_world to libhello_world_exec.so
 * If they look like libraries, they are packaged in the apk and deployed on the device in the lib folder!
 *
 * Help with files:Â https://docs.gradle.org/current/userguide/working_with_files.html
 * Implementation from: https://gitlab.com/fengshaun/syncopoli/blob/master/app/build.gradle
 */
gradle.taskGraph.afterTask { task ->
	if (task.name == "externalNativeBuildRelease" || task.name == "externalNativeBuildDebug") {
		def mode = task.name == "externalNativeBuildDebug" ? "debug" : "release"
		def buildFolder = file("${buildDir}/intermediates/ndkBuild/${mode}/obj/local/")

		copy {
			from(buildFolder) {
				exclude "**/objs"
				exclude "**/objs-debug"
				exclude "**/*.a"
				exclude "**/*.d"
				exclude "**/*.o"
				exclude "**/*.so"
			}

			into buildFolder

            rename '(.+)', 'lib$1_exec.so'

			eachFile {
				println "Replacing " + it.getPath() + " from ndkBuild directory"
			}
		}
	}
}
